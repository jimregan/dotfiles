language_specs['en'].field = function ( d ) { var me=this; this.simpleList ( d , me.his_er+' field of work include'+(me.is_dead?'d':'s')+' ' , '. ' ) ; }
language_specs['en'].cause_of_death = function ( d ) { this.simpleList ( d , 'of ' , ' ' ) ; }
language_specs['en'].killer = function ( d ) { this.simpleList ( d , 'by ' , ' ' ) ; }
language_specs['en'].sig_event = function ( d ) { this.simpleList ( d , this.s_he+' played a role in ' , '.' ) ; }

language_specs['pl'].spouses = function ( d ) {
	var me = this ;
	this.listSentence ( {
		data : d ,
		start : function() { me.h.push ( { 'Poślubił'+me.verb_end+' ' } ) } ,
		item_start : function(cb) { cb(); me.h.push ( { label:' ' } ) } ,
		date_from : function(cb) { cb(); me.h.push ( { label:' ' } ) ; } ,
		date_to : function(cb) { me.h.push ( { label:'(do ' } ) ; cb() ; me.h.push ( { label:') ' } ) } ,
		item_end : function(num,sep) { me.h.push ( { label:sep } ) } ,
		end : function() { me.h.push ( { label:'. ' } ) }
	} ) ;
}

language_specs['en'].children = function ( d ) {
	var me = this ;
	this.listSentence ( {
		data : d ,
		start : function() { me.h.push ( { label:me.his_er+' children include ' } ) } ,
		item_start : function(cb) { cb() } ,
		item_end : function(num,sep) { me.h.push ( { label:sep } ) } ,
		end : function() { me.h.push ( { label:'. ' } ) }
	} ) ;
}


language_specs['pl'].addFirstSentence = function () {
	var me = this ;
	me.h.push ( me.getBold ( { label:me.mainTitleLabel() } ) ) ;
	me.h.push ( { label:' — ' } ) ;
	this.listNationalities() ;
	this.listOccupations() ;
	me.h.push ( { label:'. ' } ) ;
	if ( me.h.length == 3 ) me.h = [] ; // No information, skip it.
	var sig_event = this.getRelatedItemsWithQualifiers ( { properties:['P793'] } ) ;
	me.sig_event ( sig_event ) ;
	me.h.push ( { label:me.getNewline() } ) ;
}

language_specs['en'].addBirthText = function () {
	var me = this ;
	var birthdate = me.i.raw.claims['P569'] ;
	var birthplace = me.i.raw.claims['P19'] ;
	var birthname = me.i.raw.claims['P513'] ;
	if ( birthdate !== undefined || birthplace !== undefined || birthname !== undefined ) {
		me.h.push ( { label:me.s_he , after:' was born ' } ) ;
		if ( birthname !== undefined ) me.h.push ( { label:me.i.getClaimTargetString(birthname[0]) , before:'<i>' , after:'</i> ' } ) ;
		if ( birthdate !== undefined ) me.h.push ( me.renderDate(birthdate[0]) ) ;
		if ( birthplace !== undefined ) me.addPlace ( { q:me.i.getClaimTargetItemID(birthplace[0]) , before:'w ' , after:' ' } ) ;
		var father = me.getParent ( 22 ) ;
		var mother = me.getParent ( 25 ) ;
		if ( father !== undefined || mother !== undefined ) {
			me.h.push ( { label:'to ' } ) ;
			if ( father !== undefined ) me.addPerson ( father , ' ' ) ;
			if ( father !== undefined && mother !== undefined ) me.h.push ( { label:'and ' } ) ;
			if ( mother !== undefined ) me.addPerson ( mother , ' ' ) ;
		}
		me.h.push ( { label:'. ' } ) ;
		me.h.push ( { label:me.getNewline() } ) ;
	}
}


language_specs['en'].addDeathText = function () {
	var me = this ;
	var deathdate = me.i.raw.claims['P570'] ;
	var deathplace = me.i.raw.claims['P20'] ;
	var deathcause = me.i.hasClaims('P509') ;
	var killer = me.i.hasClaims('P157') ;
	if ( deathdate !== undefined || deathplace !== undefined || deathcause || killer ) {
		me.h.push ( { label:me.s_he , after:' died ' } ) ;
		if ( deathcause !== undefined ) me.cause_of_death ( me.getRelatedItemsWithQualifiers ( { properties:['P509'] } ) ) ;
		if ( killer !== undefined ) me.killer ( me.getRelatedItemsWithQualifiers ( { properties:['P157'] } ) ) ;
		if ( deathdate !== undefined ) me.h.push ( me.renderDate(deathdate[0]) ) ;
		if ( deathplace !== undefined ) me.addPlace ( { q:me.i.getClaimTargetItemID(deathplace[0]) , before:'in ' , after:' ' } ) ;
		me.h.push ( { label:'. ' } ) ;
	}
	var burialplace = me.i.raw.claims['P119'] ;
	if ( burialplace !== undefined ) {
		me.addPlace ( { q:me.i.getClaimTargetItemID(burialplace[0]) , before:me.s_he+' was buried at ' , after:'. ' } ) ;
	}
}
