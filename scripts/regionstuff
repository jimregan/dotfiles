genfdetregion () { echo "$1"|sed -e 's/\.jpg$//'|awk -F'/' '{print $NF}'|awk -F'_' '{print "http://imgmeta.sourceforge.net/0.1/detected/fdetect-" $1 "_" $2 ".rdf#" $3}' ; }
_doregdepict () { echo "<$1> <http://xmlns.com/foaf/0.1/depicts> <$2> ." >> ~/tmp/sync/region-depictions.nt; }
doregdepict () { _doregdepict $(genfdetregion $1) $2 ; }
dodbpregdepict () { _doregdepict $(genfdetregion $1) http://dbpedia.org/resource/$2 ; }
dofbregdepict () { _doregdepict $(genfdetregion $1) http://rdf.freebase.com/ns/$2 ; }
dopldbpregdepict () { _doregdepict $(genfdetregion $1) http://pl.dbpedia.org/resource/$2 ; }
dofrdbpregdepict () { _doregdepict $(genfdetregion $1) http://fr.dbpedia.org/resource/$2 ; }
doptdbpregdepict () { _doregdepict $(genfdetregion $1) http://pt.dbpedia.org/resource/$2 ; }
doitdbpregdepict () { _doregdepict $(genfdetregion $1) http://it.dbpedia.org/resource/$2 ; }
dometaregdepict () { _doregdepict $(genfdetregion $1) "http://imgmeta.sourceforge.net/0.1/person#$2" ; }
dodbpfull () { dodbpregdepict $1 $2; if [ ! -e /Users/jim/img-data-prerelease/FACE-DONE/$2 ];then mkdir /Users/jim/img-data-prerelease/FACE-DONE/$2;fi; mv $1 /Users/jim/img-data-prerelease/FACE-DONE/$2/ ; }
dofbfull () { dofbregdepict $1 $2; if [ ! -e /Users/jim/img-data-prerelease/FACE-DONE/FreeBase/$2 ];then mkdir /Users/jim/img-data-prerelease/FACE-DONE/FreeBase/$2;fi; mv $1 /Users/jim/img-data-prerelease/FACE-DONE/FreeBase/$2/ ; }
dopldbpfull () { dopldbpregdepict $1 $2; if [ ! -e /Users/jim/img-data-prerelease/FACE-DONE/$2 ];then mkdir /Users/jim/img-data-prerelease/FACE-DONE/$2;fi; mv $1 /Users/jim/img-data-prerelease/FACE-DONE/$2/ ; }
dofrdbpfull () { dofrdbpregdepict $1 $2; if [ ! -e /Users/jim/img-data-prerelease/FACE-DONE/$2 ];then mkdir /Users/jim/img-data-prerelease/FACE-DONE/$2;fi; mv $1 /Users/jim/img-data-prerelease/FACE-DONE/$2/ ; }
doptdbpfull () { doptdbpregdepict $1 $2; if [ ! -e /Users/jim/img-data-prerelease/FACE-DONE/$2 ];then mkdir /Users/jim/img-data-prerelease/FACE-DONE/$2;fi; mv $1 /Users/jim/img-data-prerelease/FACE-DONE/$2/ ; }
doitdbpfull () { doitdbpregdepict $1 $2; if [ ! -e /Users/jim/img-data-prerelease/FACE-DONE/$2 ];then mkdir /Users/jim/img-data-prerelease/FACE-DONE/$2;fi; mv $1 /Users/jim/img-data-prerelease/FACE-DONE/$2/ ; }
dometafull () { dometaregdepict $1 $2; if [ ! -e /Users/jim/img-data-prerelease/FACE-DONE/meta/$2 ];then mkdir /Users/jim/img-data-prerelease/FACE-DONE/meta/$2;fi; mv $1 /Users/jim/img-data-prerelease/FACE-DONE/meta/$2/ ; }
dounkfiles () { for i in $1*;do dometafull $i unk$1;done ; }

downregdepict () { _doregfiltdepict $(genfdetregion $1) $2 ; }
_doregfiltdepict () { echo "<$1> <http://xmlns.com/foaf/0.1/depicts> <$2> ." >> ~/tmp/sync/region-filtered-depictions.nt; }
doregwnbreast () { for i in "$@";do downregdepict $i http://purl.org/vocabularies/princeton/wn30/synset-breast-noun-2.rdf; mv $i /Users/jim/img-data-prerelease/FilterReg/breast/; done } 
doregwnpenis () { for i in "$@";do downregdepict $i http://purl.org/vocabularies/princeton/wn30/synset-penis-noun-1.rdf; mv $i /Users/jim/img-data-prerelease/FilterReg/penis/; done } 
doregwnfucking () { for i in "$@";do downregdepict $i http://purl.org/vocabularies/princeton/wn30/synset-penetration-noun-6.rdf.rdf; mv $i /Users/jim/img-data-prerelease/FilterReg/fucking/; done } 
doregwnanus () { for i in "$@";do downregdepict $i http://purl.org/vocabularies/princeton/wn30/synset-anus-noun-1.rdf; mv $i /Users/jim/img-data-prerelease/FilterReg/anus/; done } 
doregwncunnilingus () { for i in "$@";do downregdepict $i http://purl.org/vocabularies/princeton/wn30/synset-cunnilingus-noun-1.rdf; mv $i /Users/jim/img-data-prerelease/FilterReg/cunnilingus/; done } 
doregwnvagina () { for i in "$@";do downregdepict $i http://purl.org/vocabularies/princeton/wn30/synset-vulva-noun-1.rdf; mv $i /Users/jim/img-data-prerelease/FilterReg/vagina/; done } 
doregwnblowjob () { for i in "$@";do downregdepict $i http://purl.org/vocabularies/princeton/wn30/synset-blowjob-noun-1.rdf; mv $i /Users/jim/img-data-prerelease/FilterReg/blowjob/; done } 
doregwncleavage () { for i in "$@";do downregdepict $i http://purl.org/vocabularies/princeton/wn30/synset-cleavage-noun-4.rdf; mv $i /Users/jim/img-data-prerelease/FilterReg/cleavage/; done } 

domisdetect () { ls /Users/jim/img-data-prerelease/facedet/neg/|sh /Users/jim/tmp/regdupes.sh |awk '{print "<" $0 "> <http://imgmeta.sourceforge.net/0.1/props#misdetected> \"true\"^^<http://www.w3.org/2001/XMLSchema#boolean> ."}' >> /Users/jim/tmp/sync/face_misdetections-20120729.nt ; }
doignored () { ls /Users/jim/img-data-prerelease/facedet/ign/|sh /Users/jim/tmp/regdupes.sh |awk '{print "<" $0 "> <http://imgmeta.sourceforge.net/0.1/props#ignored> \"true\"^^<http://www.w3.org/2001/XMLSchema#boolean> ."}' >> /Users/jim/tmp/sync/face_ignored-20120729.nt ; }

doufmfiles () { for i in $1*;do doufmfull "$i" $2; done; }
doufmfull () { doufmregdepict $1 $2; if [ ! -e /Users/jim/img-data-prerelease/FACE-DONE/UFM/$2 ];then mkdir /Users/jim/img-data-prerelease/FACE-DONE/UFM/$2;fi; mv $1 /Users/jim/img-data-prerelease/FACE-DONE/UFM/$2/ ; }
doufmregdepict () { _doregdepict $(genfdetregion $1) "http://imgmeta.sourceforge.net/0.1/UFM#$2" ; }
detless () { less ~/img/data/fdetect-$1.rdf ; }

domodefiles () { for i in $1*;do domodefull "$i" $2; done; }
domodefull () { domoderegdepict $1 $2; if [ ! -e /Users/jim/img-data-prerelease/FACE-DONE/Mode/$2 ];then mkdir /Users/jim/img-data-prerelease/FACE-DONE/Mode/$2;fi; mv $1 /Users/jim/img-data-prerelease/FACE-DONE/Mode/$2/ ; }
domoderegdepict () { _doregdepict $(genfdetregion $1) "http://imgmeta.sourceforge.net/0.1/mode#ModeModels$2" ; }

dovivfiles () { for i in $1*;do dovivfull "$i" $2; done; }
dovivfull () { dovivregdepict $1 $2; if [ ! -e /Users/jim/img-data-prerelease/FACE-DONE/Viviens/$2 ];then mkdir /Users/jim/img-data-prerelease/FACE-DONE/Viviens/$2;fi; mv $1 /Users/jim/img-data-prerelease/FACE-DONE/Viviens/$2/ ; }
dovivregdepict () { _doregdepict $(genfdetregion $1) "http://imgmeta.sourceforge.net/0.1/viviens#Viviens$2" ; }

dochadfiles () { for i in $1*;do dochadfull "$i" $2; done; }
dochadfull () { dochadregdepict $1 $2; if [ ! -e /Users/jim/img-data-prerelease/FACE-DONE/Chadwick/$2 ];then mkdir /Users/jim/img-data-prerelease/FACE-DONE/Chadwick/$2;fi; mv $1 /Users/jim/img-data-prerelease/FACE-DONE/Chadwick/$2/ ; }
dochadregdepict () { _doregdepict $(genfdetregion $1) "http://imgmeta.sourceforge.net/0.1/chadwickmodels#$2" ; }

dounqfiles () { for i in $1*;do dounqfull "$i" $2; done; }
dounqfull () { dounqregdepict $1 $2; if [ ! -e /Users/jim/img-data-prerelease/FACE-DONE/Unique/$2 ];then mkdir /Users/jim/img-data-prerelease/FACE-DONE/Unique/$2;fi; mv $1 /Users/jim/img-data-prerelease/FACE-DONE/Unique/$2/ ; }
dounqregdepict () { _doregdepict $(genfdetregion $1) "http://imgmeta.sourceforge.net/0.1/uniquedk#$2" ; }

dolemfiles () { for i in $1*;do dolemfull "$i" $2; done; }
dolemfull () { dolemregdepict $1 $2; if [ ! -e /Users/jim/img-data-prerelease/FACE-DONE/LeMgt/$2 ];then mkdir /Users/jim/img-data-prerelease/FACE-DONE/LeMgt/$2;fi; mv $1 /Users/jim/img-data-prerelease/FACE-DONE/LeMgt/$2/ ; }
dolemregdepict () { _doregdepict $(genfdetregion $1) "http://imgmeta.sourceforge.net/0.1/lemanagement#LM$2" ; }
dogiantfiles () { for i in $1*;do dogiantfull "$i" $2; done; }
dogiantfull () { dogiantregdepict $1 $2; if [ ! -e /Users/jim/img-data-prerelease/FACE-DONE/GiantMgt/$2 ];then mkdir /Users/jim/img-data-prerelease/FACE-DONE/GiantMgt/$2;fi; mv $1 /Users/jim/img-data-prerelease/FACE-DONE/GiantMgt/$2/ ; }
dogiantregdepict () { _doregdepict $(genfdetregion $1) "http://imgmeta.sourceforge.net/0.1/giantmanagement#$2" ; }

dofmmfiles () { for i in $1*;do dofmmfull "$i" $2; done; }
dofmmfull () { dofmmregdepict $1 $2; if [ ! -e /Users/jim/img-data-prerelease/FACE-DONE/FM/$2 ];then mkdir /Users/jim/img-data-prerelease/FACE-DONE/FM/$2;fi; mv $1 /Users/jim/img-data-prerelease/FACE-DONE/FM/$2/ ; }
dofmmregdepict () { _doregdepict $(genfdetregion $1) "http://imgmeta.sourceforge.net/0.1/fmmodelagency#FMFM$2" ; }

dotjarfiles () { for i in $1*;do dotjarfull "$i" $2; done; }
dotjarfull () { dotjarregdepict $1 $2; if [ ! -e /Users/jim/img-data-prerelease/FACE-DONE/Tjarda/$2 ];then mkdir /Users/jim/img-data-prerelease/FACE-DONE/Tjarda/$2;fi; mv $1 /Users/jim/img-data-prerelease/FACE-DONE/Tjarda/$2/ ; }
dotjarregdepict () { _doregdepict $(genfdetregion $1) "http://imgmeta.sourceforge.net/0.1/tjarda#$2" ; }

#dolxfiles () { for i in $1*;do dolxfull "$i" $2; done; }
#dolxfull () { dolxregdepict $1 $2; if [ ! -e /Users/jim/img-data-prerelease/FACE-DONE/Lexington/$2 ];then mkdir /Users/jim/img-data-prerelease/FACE-DONE/Lexington/$2;fi; mv $1 /Users/jim/img-data-prerelease/FACE-DONE/Lexington/$2/ ; }
#dolxregdepict () { _doregdepict $(genfdetregion $1) "http://imgmeta.sourceforge.net/0.1/lexington-models#LM$2" ; }

doorangefiles () { for i in $1*;do doorangefull "$i" $2; done; }
doorangefull () { doorangeregdepict $1 $2; if [ ! -e /Users/jim/img-data-prerelease/FACE-DONE/Orange/$2 ];then mkdir /Users/jim/img-data-prerelease/FACE-DONE/Orange/$2;fi; mv $1 /Users/jim/img-data-prerelease/FACE-DONE/Orange/$2/ ; }
doorangeregdepict () { _doregdepict $(genfdetregion $1) "http://imgmeta.sourceforge.net/0.1/orangemodels#$2" ; }
dobaltregdepict () { _doregdepict $(genfdetregion $1) "http://imgmeta.sourceforge.net/0.1/balticmodels#$2" ; }
dobaltfiles () { for i in $1*;do dobaltfull "$i" $2; done; }
dobaltfull () { dobaltregdepict $1 $2; if [ ! -e /Users/jim/img-data-prerelease/FACE-DONE/Baltic/$2 ];then mkdir /Users/jim/img-data-prerelease/FACE-DONE/Baltic/$2;fi; mv $1 /Users/jim/img-data-prerelease/FACE-DONE/Baltic/$2/ ; }

dometafiles () { for i in $1*;do dometafull $i $2;done ; }
dodbpfiles () { for i in $1*;do dodbpfull $i $2;done ; }
doptdbpfiles () { for i in $1*;do doptdbpfull $i $2;done ; }
doitdbpfiles () { for i in $1*;do doitdbpfull $i $2;done ; }

dounkdepict () { cat ~/img/data/fdetect-$1.rdf |grep 'rdf:about'|awk -F'"' '{print $2}'|while read i;do dodepict $i http://imgmeta.sourceforge.net/0.1/person#unk$1;done ; }
dofdetmetadepict () { cat ~/img/data/fdetect-$1.rdf |grep 'rdf:about'|awk -F'"' '{print $2}'|while read i;do dodepict $i http://imgmeta.sourceforge.net/0.1/person#$2;done ; }
dofdetdbpdepict () { cat ~/img/data/fdetect-$1.rdf |grep 'rdf:about'|awk -F'"' '{print $2}'|while read i;do dodepict $i http://dbpedia.org/resource/$2;done ; }
dofdetptdbpdepict () { cat ~/img/data/fdetect-$1.rdf |grep 'rdf:about'|awk -F'"' '{print $2}'|while read i;do dodepict $i http://pt.dbpedia.org/resource/$2;done ; }
dofdetitdbpdepict () { cat ~/img/data/fdetect-$1.rdf |grep 'rdf:about'|awk -F'"' '{print $2}'|while read i;do dodepict $i http://it.dbpedia.org/resource/$2;done ; }

dounkboth () { dounkdepict $1; dounkfiles $1; }
dofdetboth () { dometafiles $1 $2; dofdetmetadepict $1 $2; }
dodbpboth () { dofdetdbpdepict $1 $2; dodbpfiles $1 $2; }
doptdbpboth () { dofdetptdbpdepict $1 $2; doptdbpfiles $1 $2; }
doitdbpboth () { dofdetitdbpdepict $1 $2; doitdbpfiles $1 $2; }

persfullurl () { printf "ppl:$1\n    a dbpont:AdultActor, foaf:person ;\n    foaf:gender \"female\"@en ;\n    foaf:isPrimaryTopicOf <$3> ;\n    foaf:name \"$2\" .\n\n" >> ~/tmp/fixed/people.ttl ; }
persnameunk () { printf "ppl:unk$1\n    a dbpont:AdultActor, foaf:person ;\n    foaf:gender \"female\"@en ;\n    foaf:name \"$2\" .\n\n" >> ~/tmp/fixed/people.ttl ; }
persmodelname () { printf "ppl:$1\n    a dbpont:Model, foaf:person ;\n    foaf:gender \"female\"@en ;\n    foaf:name \"$2\" .\n\n" >> ~/tmp/fixed/people.ttl ; }
persmodelfull () { printf "ppl:$1\n    a dbpont:Model, foaf:person ;\n    foaf:gender \"female\"@en ;\n    foaf:name \"$2\" ;\n    foaf:isPrimaryTopicOf <$3> .\n\n" >> ~/tmp/fixed/people.ttl ; }
perssameas () { printf "ppl:$1\n    owl:sameAs ppl:$2 .\n\n" >> ~/tmp/fixed/people.ttl ; }

doprimofiles () { for i in $1*;do doprimofull "$i" $2; done; }
doprimofull () { doprimoregdepict $1 $2; if [ ! -e /Users/jim/img-data-prerelease/FACE-DONE/Primo/$2 ];then mkdir /Users/jim/img-data-prerelease/FACE-DONE/Primo/$2;fi; mv $1 /Users/jim/img-data-prerelease/FACE-DONE/Primo/$2/ ; }
doprimoregdepict () { _doregdepict $(genfdetregion $1) "http://imgmeta.sourceforge.net/0.1/primomgt#PM$2" ; }
doprimodepict () { cat ~/img/data/fdetect-$1.rdf |grep 'rdf:about'|awk -F'"' '{print $2}'|while read i;do dodepict $i http://imgmeta.sourceforge.net/0.1/primomgt#PM$2;done ; }
doprimoboth () { doprimodepict $1 $2; doprimofiles $1 $2; }
# primo () { id=$(cat ~/img/data/fdetect-$1.rdf|grep models|awk -F'/' '{print $5}'|uniq); idnum=$(echo "$id"|wc -l|awk '{print $1}'); if [ "$idnum" != "1" ] ; then echo "Error: $id";else doprimoboth $1 $id;fi ; }

doscenefiles () { for i in $1*;do doscenefull "$i" $2; done; }
doscenefull () { dosceneregdepict $1 $2; if [ ! -e /Users/jim/img-data-prerelease/FACE-DONE/SceneModels/$2 ];then mkdir /Users/jim/img-data-prerelease/FACE-DONE/SceneModels/$2;fi; mv $1 /Users/jim/img-data-prerelease/FACE-DONE/SceneModels/$2/ ; }
dosceneregdepict () { _doregdepict $(genfdetregion $1) "http://imgmeta.sourceforge.net/0.1/scenemodels#$2" ; }
doscenedepict () { cat ~/img/data/fdetect-$1.rdf |grep 'rdf:about'|awk -F'"' '{print $2}'|while read i;do dodepict $i http://imgmeta.sourceforge.net/0.1/scenemodels#$2;done ; }
dosceneboth () { doscenedepict $1 $2; doscenefiles $1 $2; }
# scenedo () { id=$(cat ~/img/data/fdetect-$1.rdf|grep scene-model-management|awk -F'"' '{print $2}'|awk -F'/' '{print $NF}' |sed -e 's/^scene\-model\-management\-//;s/\.jpg$//;s/\.jpeg$//;s/\.png$//;s/\-images\-[0-9]*$//'|uniq); idnum=$(echo "$id"|wc -l|awk '{print $1}'); if [ "$idnum" != "1" ] ; then echo "Error: $id";else dosceneboth $1 $id;fi ; }

doattrfiles () { for i in $1*;do doattrfull "$i" $2; done; }
doattrfull () { doattrregdepict $1 $2; if [ ! -e /Users/jim/img-data-prerelease/FACE-DONE/AttractiveHu/$2 ];then mkdir /Users/jim/img-data-prerelease/FACE-DONE/AttractiveHu/$2;fi; mv $1 /Users/jim/img-data-prerelease/FACE-DONE/AttractiveHu/$2/ ; }
doattrregdepict () { _doregdepict $(genfdetregion $1) "http://imgmeta.sourceforge.net/0.1/attractivehu#Attr$2" ; }
doattrdepict () { cat ~/img/data/fdetect-$1.rdf |grep 'rdf:about'|awk -F'"' '{print $2}'|while read i;do dodepict $i http://imgmeta.sourceforge.net/0.1/attractivehu#Attr$2;done ; }
doattrboth () { doattrdepict $1 $2; doattrfiles $1 $2; }

donoahfiles () { for i in $1*;do donoahfull "$i" $2; done; }
donoahfull () { donoahregdepict $1 $2; if [ ! -e /Users/jim/img-data-prerelease/FACE-DONE/NoahModels/$2 ];then mkdir /Users/jim/img-data-prerelease/FACE-DONE/NoahModels/$2;fi; mv $1 /Users/jim/img-data-prerelease/FACE-DONE/NoahModels/$2/ ; }
donoahregdepict () { _doregdepict $(genfdetregion $1) "http://imgmeta.sourceforge.net/0.1/noahmodels#NM$2" ; }
donoahdepict () { cat ~/img/data/fdetect-$1.rdf |grep 'rdf:about'|awk -F'"' '{print $2}'|while read i;do dodepict $i http://imgmeta.sourceforge.net/0.1/noahmodels#NM$2;done ; }
donoahboth () { donoahdepict $1 $2; donoahfiles $1 $2; }
# noah () { id=$(cat ~/img/data/fdetect-$1.rdf|grep models|awk -F'/' '{print $7}'|uniq); idnum=$(echo "$id"|wc -l|awk '{print $1}'); if [ "$idnum" != "1" ] ; then echo "Error: $id";else donoahboth $1 $id;fi ; }

