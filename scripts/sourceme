unthumb () { echo $(perl -e 'if($ARGV[0] =~ m!(http://.*)-([0-9]*)x([0-9]*)(\..*)!) {print "$1$4";}' $1) ; }
lunthumb () { echo $(perl -e 'if($ARGV[0] =~ m!(.*)-([0-9]*)x([0-9]*)(\..*)!) {print "$1$4";}' $1) ; }

beergogglerimg () { lynx -source $1|grep '<div align="center"><img src="'|awk -F'src="' '{print $2}'|awk -F'"' '{print $1}' ; }
beergogglerpage () { lynx -dump $1 |grep 'attachment_id'|awk '{print $2}'|grep -v '&'|sort|uniq ; }

egotasticimg () { lynx -source $1|grep '<div class="entry-content-img">'|awk -F'src="' '{print $2}'|awk -F'"' '{print $1}' ; }
egotasticpage () { lynx -dump $1|grep $1|awk '{print $2}' ; }

dodepict () { echo "<$1> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://xmlns.com/foaf/0.1/Image> ." >> fash-rdf-links; echo "<$1> <http://xmlns.com/foaf/0.1/depicts> <$2> ." >> fash-rdf-links; }
mydepict () { echo "<$1> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://xmlns.com/foaf/0.1/Image> ." >> fash-rdf-links; echo "<$1> <http://xmlns.com/foaf/0.1/depicts> $2 ." >> fash-rdf-links; }

doimg () { echo "<$1> <http://xmlns.com/foaf/0.1/page> <$2> ." >> fash-rdf-links; }
procimg () { doimg "$2" "$1"; wget -x -c "$2" ; }
do404 () { echo "<$1> <http://www.w3.org/2011/http#statusCodeValue> <http://www.w3.org/2011/http-statusCodes#NotFound> ." >> fash-rdf-links; }
dosimilar () { echo "<$1> <http://www.w3.org/2004/02/skos/core#closeMatch> <$2> ." >> fash-rdf-links; }
kindasimilar () { echo "<$1> <http://www.w3.org/2004/02/skos/core#broadMatch> <$2> ." >> fash-rdf-links; }

dosource () { echo "<$1> <http://purl.org/dc/elements/1.1/source> <$2> ." >> fash-rdf-links; }

dotitle () { echo "<$1> <http://purl.org/dc/terms/title> \"$2\" ." >> fash-rdf-links; }

newdepict () { bnode="_:$3"; echo "$bnode  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://xmlns.com/foaf/0.1/Person> ." >> fash-rdf-links; echo "$bnode  <http://xmlns.com/foaf/0.1/name> \"$2\" ." >> fash-rdf-links;echo "<$1> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://xmlns.com/foaf/0.1/Image> ." >> fash-rdf-links; echo "<$1> <http://xmlns.com/foaf/0.1/depicts> $bnode ." >> fash-rdf-links; }

dofull () { 
	if [ "$3" != "" ]
		then dodepict $3 $1 
		doimg $3 $2
		wget -x -c $3
	else
		echo "Missing URL"
	fi
}
myfull () { 
	if [ "$3" != "" ]
		then mydepict $3 $1 
		doimg $3 $2
		wget -x -c $3
	else
		echo "Missing URL"
	fi
}

dopopohol () { for i in $(lynx -dump $1|grep photo.php|awk '{print $2}');do dofull $2 $1 http://www.popoholic.com/$(lynx -source $i|grep bigimages|awk -F'src="' '{print $2}'|awk -F'"' '{print $1}');done }

doperson () { echo "$1  <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://xmlns.com/foaf/0.1/Person> ." >> fash-rdf-links; echo "$1 <http://xmlns.com/foaf/0.1/name> \"$2\" ." >> fash-rdf-links; }

sourcewhat () { for i in $(lynx -source $1 |gsed -e 's/<img/\n<img/g'|grep '^<img'|awk -F'src="' '{print $2}' |awk -F'"' '{print $1}'|grep chztdwtease.files|grep '?'|sed -e 's/#038;//g');do dosource $i $(echo $i|awk -F'?' '{print $1}');done; }

fullpopoholic () { for i in $(lynx -dump $2|grep photo.php|awk -F'id=' '{print $2}'|awk -F'&' '{print $1}');do dofull $1 $2 http://www.popoholic.com/bigimages/$i.jpg;done; }
myfullpopoholic () { for i in $(lynx -dump $2|grep photo.php|awk -F'id=' '{print $2}'|awk -F'&' '{print $1}');do myfull $1 $2 http://www.popoholic.com/bigimages/$i.jpg;done; }
fullhollywoodtuna () { for i in $(lynx -useragent "Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.10 (KHTML, like Gecko) Chrome/8.0.552.237 Safari/534.10" -dump $2|grep photo.php|awk '{print $2}');do url=$(echo $i|awk -F'id=' '{print $2}'|awk -F'&' '{print $1}');loc=$(echo $i|awk -F'loc=' '{print $2}'|awk -F'&' '{print $1}'); dofull $1 $2 http://www.hollywoodtuna.com/images${loc}/bigimages${loc}/$url.jpg;done; }
myfullhollywoodtuna () { for i in $(lynx -useragent "Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.10 (KHTML, like Gecko) Chrome/8.0.552.237 Safari/534.10" -dump $2|grep photo.php|awk '{print $2}');do url=$(echo $i|awk -F'id=' '{print $2}'|awk -F'&' '{print $1}');loc=$(echo $i|awk -F'loc=' '{print $2}'|awk -F'&' '{print $1}'); myfull $1 $2 http://www.hollywoodtuna.com/images${loc}/bigimages${loc}/$url.jpg;done; }

fullbrosome () { for i in $(lynx -source $2|grep 'title='|grep 'attachment-thumbnail'|awk -F'src="' '{print $2}'|awk -F'"' '{print $1}'); do th=$(unthumb $i); dofull $1 $2 $th; dosource $i $th ; done }
myfullbrosome () { for i in $(lynx -source $2|grep 'title='|grep 'attachment-thumbnail'|awk -F'src="' '{print $2}'|awk -F'"' '{print $1}'); do th=$(unthumb $i); myfull $1 $2 $th; dosource $i $th ; done }

fullbeergoggler () { for i in $(beergogglerpage $2);do dofull $1 $2 $(beergogglerimg $i);done; }
myfullbeergoggler () { for i in $(beergogglerpage $2);do myfull $1 $2 $(beergogglerimg $i);done; }

myfullegotastic () { 
	for i in $(egotasticpage $2);do 
		img=$(egotasticimg $i)
		thumb=$(unthumb $img)
		myfull $1 $2 $img
		myfull $1 $2 $thumb
		if [ "$thumb" != "" ] && [ "$img" != "" ] && [ "$img" != "$thumb" ]
		then
			dosimilar $img $thumb
		fi
	done
}
dofullegotastic () { 
	for i in $(egotasticpage $2);do 
		img=$(egotasticimg $i)
		thumb=$(unthumb $img)
		dofull $1 $2 $img
		dofull $1 $2 $thumb
		if [ "$thumb" != "" ] && [ "$img" != "" ] && [ "$img" != "$thumb" ]
		then
			dosimilar $img $thumb
		fi
	done
}

myfullwhat () { for i in $(lynx -source $2 |gsed -e 's/<img/\n<img/g'|grep '^<img'|awk -F'src="' '{print $2}' |awk -F'"' '{print $1}'|awk -F'?' '{print $1}'|grep chztdwtease.files);do myfull $1 $2 $i;done; }
fullwhat () { for i in $(lynx -source $2 |gsed -e 's/<img/\n<img/g'|grep '^<img'|awk -F'src="' '{print $2}' |awk -F'"' '{print $1}'|awk -F'?' '{print $1}'|grep chztdwtease.files);do dofull $1 $2 $i;done; }

dogrumpiest () { url=$1; who=$2; for i in $(lynx -dump $url|grep 'jpg&'|awk '{print $2}'|awk -F'&' '{print $1}'|sort|uniq|sed -e 's/picture.php\?MyImage=/wp-content\/uploads/g');do  dofull $who $url $i;done; }
mygrumpiest () { url=$1; who=$2; for i in $(lynx -dump $url|grep 'jpg&'|awk '{print $2}'|awk -F'&' '{print $1}'|sort|uniq|sed -e 's/picture.php\?MyImage=/wp-content\/uploads/g');do  myfull $who $url $i;done; }

myexperson () { for i in $(grep $1 extract.n3|awk -F'<' '{print $4}'|awk -F'>' '{print $1}'|grep -i jpg); do mydepict $i $2; done }
experson () { for i in $(grep $1 extract.n3|awk -F'<' '{print $4}'|awk -F'>' '{print $1}'|grep -i jpg); do dodepict $i $2; done }

wnnude () { for i in $@; do echo "<$i> <http://xmlns.com/foaf/0.1/depicts> <http://purl.org/vocabularies/princeton/wn30/synset-nude-noun-3.rdf> ." >> fash-rdf-links; done; }
wnbreast () { for i in $@; do echo "<$i> <http://xmlns.com/foaf/0.1/depicts> <http://purl.org/vocabularies/princeton/wn30/synset-breast-noun-2.rdf> ." >> fash-rdf-links; done; }
wnpenetration () { for i in $@; do echo "<$i> <http://xmlns.com/foaf/0.1/depicts> <http://purl.org/vocabularies/princeton/wn30/synset-penetration-noun-6.rdf> ." >> fash-rdf-links; done; }
wnpenis () { for i in $@; do echo "<$i> <http://xmlns.com/foaf/0.1/depicts> <http://purl.org/vocabularies/princeton/wn30/synset-penis-noun-1.rdf> ." >> fash-rdf-links; done; }
wnblowjob () { for i in $@; do echo "<$i> <http://xmlns.com/foaf/0.1/depicts> <http://purl.org/vocabularies/princeton/wn30/synset-blowjob-noun-1.rdf> ." >> fash-rdf-links; done; }
wnlesbian () { for i in $@; do echo "<$i> <http://xmlns.com/foaf/0.1/depicts> <http://purl.org/vocabularies/princeton/wn30/synset-lesbianism-noun-1.rdf> ." >> fash-rdf-links; done; }
wndildo () { for i in $@; do echo "<$i> <http://xmlns.com/foaf/0.1/depicts> <http://purl.org/vocabularies/princeton/wn30/synset-dildo-noun-1.rdf> ." >> fash-rdf-links; done; }


ntriplify () { rapper -i rdfxml -o ntriples $1 |sed -e 's/<file:\/\/\/Users\/jim\/img\/[^#]*#/_:/'|sed -e 's/\(Reg[0-9]*\)>/\1/'|grep '_:' ; }

seq () { perl -e 'for $i($ARGV[0]..$ARGV[1]){print "$i ";}' ; }
